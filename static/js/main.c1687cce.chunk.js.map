{"version":3,"sources":["pages/Main/style.js","services/api.js","pages/Main/index.js","pages/Repositorio/style.js","pages/Repositorio/index.js","routes.js","styles/global.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Form","form","props","error","animate","keyframes","SubmitButton","button","attrs","type","disabled","loading","css","List","ul","DeleteButton","api","Axios","create","baseURL","Main","useState","newRepo","setNewRepo","repositorios","setRepositorios","setLoading","alert","setAlert","useEffect","repoLocalGet","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","useCallback","e","a","Error","find","repo","name","get","response","data","full_name","console","log","preventDefault","submit","handleDelete","filter","r","setTimeout","size","onSubmit","placeholder","value","onChange","target","className","color","map","key","onClick","to","encodeURIComponent","Owner","header","Loading","BackButton","Link","PageActions","ListStates","active","Repositorio","match","repositorio","setRepositorio","issues","setIssues","page","setPage","state","label","filters","filterIndex","setFilterIndex","handlePage","action","index","nomeRepo","decodeURIComponent","params","Promise","all","per_page","repositorioData","issuesData","load","loadIssue","src","owner","avatar_url","alt","login","description","item","loadOption","issue","id","user","href","html_url","title","labels","Routes","exact","path","component","createGlobalStyle","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c1687cce.chunk.js","sourcesContent":["import styled, {keyframes, css} from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 700px;\r\n  background: #FFF;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 20px rgba(0,0,0, 0.2);\r\n  padding: 30px;\r\n  margin: 80px auto;\r\n\r\n  h1{\r\n    font-size: 20px;\r\n    display:flex;\r\n    align-items: center;\r\n    flex-direction:row;\r\n    \r\n    svg{\r\n      margin-right: 10px;\r\n    }\r\n\r\n  }\r\n\r\n  fieldset{\r\n    border:none;\r\n    display: flex;\r\n    flex: 1;\r\n  }\r\n\r\n  span.erro{\r\n    color:red;\r\n    padding: 4px;\r\n    position:absolute;\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 30px;\r\n  display:flex;\r\n  flex-direction: row;\r\n\r\n  input{\r\n    width: 100%;\r\n    border: 1px solid ${props => (props.error ? '#FF0000' : '#DDD')};\r\n    padding: 10px 15px;\r\n    border-radius: 4px;\r\n    font-size: 17px;\r\n  }\r\n\r\n`;\r\n\r\n//Criando animcação do botao\r\nconst animate = keyframes`\r\n  from{\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to{\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button.attrs(props => ({\r\n  type: 'submit',\r\n  disabled: props.loading,\r\n}))`\r\n  background:#0D2636;\r\n  border: 0;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  padding: 0 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n\r\n  &[disabled]{\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n\r\n  ${props => props.loading &&\r\n    css`\r\n      svg{\r\n        animation: ${animate} 2s linear infinite;\r\n      }\r\n    `\r\n  }\r\n\r\n\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style:none;\r\n  margin-top: 20px;\r\n\r\n  li{\r\n    padding: 15px 0;\r\n    display: flex;\r\n    flex-direction:row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & + li{\r\n      border-top: 1px solid #eee;\r\n    }\r\n\r\n    a{\r\n      color:#0D2636;\r\n      text-decoration: none;\r\n    }\r\n\r\n\r\n  }\r\n\r\n`;\r\n\r\n\r\nexport const DeleteButton = styled.button.attrs({\r\n  type:'button'\r\n})`\r\n  background: transparent;\r\n  color:#0D2636;\r\n  border:0;\r\n  padding: 8px 7px;\r\n  outline:0;\r\n  border-radius: 4px;\r\n`;","import Axios from 'axios';\r\n\r\nconst api = Axios.create({\r\n    baseURL: 'https://api.github.com',\r\n})\r\n\r\nexport default api;","import React, {useState, useCallback, useEffect} from 'react';\r\nimport { FaGithub, FaPlus, FaSpinner, FaBars, FaTrash } from 'react-icons/fa';\r\nimport {Container, Form, SubmitButton, List, DeleteButton} from './style';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\n\r\nexport default function Main(){\r\n\r\n  const [newRepo, setNewRepo] = useState('');\r\n  const [repositorios, setRepositorios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert ] = useState(null);\r\n\r\n  // Esse useEffect fica como se fosse o component did mount porque não tem referencia dentro do array\r\n  useEffect(()=>{\r\n    const repoLocalGet = localStorage.getItem('repoLocal');\r\n    if(repoLocalGet){\r\n      setRepositorios(JSON.parse(repoLocalGet));\r\n    }\r\n  },[])\r\n\r\n  // quando a gente passa o item no useeffet que estamos alterando, esse useeffet se torna um didupdate\r\n  useEffect(()=>{\r\n    localStorage.setItem('repoLocal', JSON.stringify(repositorios));\r\n  },[repositorios])\r\n\r\n  const handleSubmit = useCallback((e)=>{\r\n    e.preventDefault();\r\n    async function submit(){\r\n      setLoading(true);\r\n      setAlert(null);\r\n      try\r\n      {\r\n        if(newRepo === ''){\r\n          throw new Error('Você precisa indicar um repositório')\r\n        }\r\n        const hasRepo = repositorios.find(repo => repo.name === newRepo);\r\n        if(hasRepo){\r\n          throw new Error('Repositório já existe');\r\n        }\r\n        const response = await api.get(`repos/${newRepo}`);\r\n        const data = {\r\n          name: response.data.full_name,\r\n        }\r\n        setRepositorios([...repositorios, data]);\r\n        setNewRepo('');\r\n      }\r\n      catch(error)\r\n      {\r\n        setAlert(true)\r\n        console.log(error);\r\n      }\r\n      finally\r\n      {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    submit();\r\n  },[newRepo, repositorios]);\r\n\r\n  function handleinputChange(e){\r\n    setNewRepo(e.target.value);\r\n    setAlert(null);\r\n  }\r\n\r\n  const handleDelete = useCallback((repo) => {\r\n    const find = repositorios.filter( r => r.name !== repo);\r\n    setRepositorios(find);\r\n  }, [repositorios])\r\n\r\n  useEffect(()=>{\r\n    if(alert === true){\r\n      setTimeout(function(){\r\n        setAlert(null)\r\n      },2000)\r\n    }\r\n  },[alert])\r\n\r\n\r\n  return(\r\n    <Container>\r\n      \r\n      <h1>\r\n        <FaGithub size={25}/>\r\n        Meus Repositorios\r\n      </h1>\r\n\r\n      <Form onSubmit={handleSubmit} error={alert}>\r\n        <fieldset>\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"Adicionar Repositorios\"\r\n        value={newRepo}\r\n        onChange={handleinputChange}\r\n        />\r\n         {alert && <span className='erro'>Repositório já existe...</span>}\r\n        </fieldset>\r\n\r\n        <SubmitButton loading={loading ? 1 : 0}>\r\n          {loading ? (\r\n            <FaSpinner color=\"#FFF\" size={14}/>\r\n          ) : (\r\n            <FaPlus color=\"#FFF\" size={14}/>\r\n          )}\r\n        </SubmitButton>\r\n\r\n      </Form>\r\n\r\n      <List>\r\n        {repositorios.map( repo => (\r\n          <li key={repo.name}>\r\n            <span>\r\n              <DeleteButton onClick={()=> handleDelete(repo.name)}><FaTrash size={14}/></DeleteButton>\r\n              {repo.name}\r\n            </span>\r\n            <Link to={`/repositorio/${encodeURIComponent(repo.name)}`}><FaBars size={20}/></Link>\r\n          </li>\r\n        ) )}\r\n      </List>\r\n\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n    max-width: 700px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 20px rgba(0,0,0, 0.2);\r\n    padding: 30px;\r\n    margin: 80px auto;\r\n\r\n    ul{\r\n        padding: 16px;\r\n\r\n        li{\r\n            display: flex;\r\n            padding: 16px 8px;\r\n\r\n            & + li {\r\n                margin-top: 16px;\r\n            }\r\n\r\n            img{\r\n                width: 36px;\r\n                height: auto;\r\n                border-radius: 50%;\r\n                border:2px solid #0D2636;\r\n            }\r\n\r\n            div{\r\n                flex: 1;\r\n                margin-left: 12px;\r\n\r\n                a{\r\n                    text-decoration: none;\r\n                    color: #222222;\r\n                    transform: 1s;\r\n\r\n                    &:hover{\r\n                        color: red;\r\n                    }\r\n\r\n                }\r\n\r\n                span{\r\n                    background-color: #222222;\r\n                    color: #fff;\r\n                    border-radius: 4px;\r\n                    font-weight: 600;\r\n                    padding: 4px 7px;\r\n                    margin-left: 10px;\r\n                }\r\n\r\n                p{\r\n                    margin-top: 10px;\r\n                    font-size: 12px;\r\n                    color: #000;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const Owner = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    img{\r\n        width: 150px;\r\n        border-radius: 20%;\r\n        margin: 20px 0;\r\n    }\r\n\r\n    h1{\r\n        font-size: 30px;\r\n        color: #0D2636;\r\n    }\r\n\r\n    p{\r\n        margin-top: 5px;\r\n        font-size: 14px;\r\n        color: #000;\r\n        text-align: center;\r\n        line-height: 1.4;\r\n        max-width: 400px;\r\n    }\r\n\r\n    button{\r\n        background-color: black;\r\n        border:none;\r\n    }\r\n\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: red;\r\n    height: 100vh;\r\n`\r\n\r\nexport const BackButton = styled(Link)`\r\n    border:0;\r\n    outline:0;\r\n    background: transparent;\r\n`;\r\n\r\nexport const PageActions = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    button{\r\n        outline: 0;\r\n        border: 0;\r\n        background-color: #222;\r\n        color: #fff;\r\n        padding: 5px 10px;\r\n        border-radius: 5px;\r\n\r\n        &:disabled{\r\n            cursor: not-allowed;\r\n            opacity: 0.5\r\n        } \r\n    }\r\n`\r\n\r\nexport const ListStates = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    li{\r\n        display: flex;\r\n        margin:0 !important;\r\n        padding:4px 8px !important;\r\n        background-color: black;\r\n        color: red;\r\n        border:1px solid white;\r\n        cursor: pointer;\r\n\r\n        &:nth-child(${props => props.active + 1}){\r\n        background-color: red;\r\n        color: black;\r\n    }\r\n\r\n    }\r\n\r\n`","import React, { useEffect, useState } from 'react';\r\nimport {Container, Owner , Loading, BackButton, PageActions, ListStates} from './style';\r\nimport api from '../../services/api'\r\nimport {FaArrowLeft} from 'react-icons/fa'\r\n\r\nexport default function Repositorio({match}){\r\n\r\n    const [repositorio, setRepositorio] = useState({});\r\n    const [issues, setIssues] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [filters, setFilter] = useState([\r\n        {state: 'all', label: 'Todas', active: true},\r\n        {state: 'open', label: 'Abertas', active: false},\r\n        {state: 'closed', label: 'Fechadas', active: false}\r\n    ])\r\n\r\n    const [filterIndex, setFilterIndex] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        async function load(){\r\n            const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n            const [repositorioData, issuesData] = await Promise.all([\r\n                api.get(`/repos/${nomeRepo}`),\r\n                api.get(`/repos/${nomeRepo}/issues`,{\r\n                    // o axios deixa passar o params dessa forma\r\n                    params:{\r\n                        state: 'open',\r\n                        per_page: 5\r\n                    }\r\n                })\r\n            ])\r\n            setRepositorio(repositorioData.data);\r\n            setIssues(issuesData.data);\r\n            setLoading(false);\r\n        }\r\n        load();\r\n    },[match.params.repositorio])\r\n\r\n    useEffect(()=>{\r\n\r\n        async function loadIssue(){\r\n            const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n            const response = await api.get(`/repos/${nomeRepo}/issues`,{\r\n                // o axios deixa passar o params dessa forma\r\n                params:{\r\n                    state: filters[filterIndex].state,\r\n                    page: page,\r\n                    per_page: 5\r\n                }\r\n            })\r\n            setIssues(response.data);\r\n        }\r\n\r\n        loadIssue();\r\n\r\n    }, [match.params.repositorio, page, filters, filterIndex])\r\n\r\n    function handlePage(action){\r\n        setPage( action === 'back' ? page -1 : page + 1)\r\n    }\r\n\r\n\r\n    async function loadOption(index){\r\n        setFilterIndex(index);\r\n    }\r\n\r\n\r\n    if(loading){\r\n        return(\r\n            <Loading>Carregando...</Loading>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <BackButton to='/'><FaArrowLeft size={30}/></BackButton>\r\n            <Owner>\r\n                <img src={repositorio.owner.avatar_url} alt={repositorio.owner.login}/>\r\n                <h1>{repositorio.name}</h1>\r\n                <p>{repositorio.description}</p>\r\n            </Owner>\r\n            <ListStates active={filterIndex}>\r\n                {filters.map( (item, index) => (\r\n                    <li key={item.label} onClick={()=> loadOption(index)}>{item.label}</li>\r\n                ) )}\r\n            </ListStates>\r\n            <ul>\r\n                {issues.map( issue => (\r\n                    <li key={issue.id}>\r\n                        <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n                        <div>\r\n                            <a href={issue.html_url} target=\"_blank\">{issue.title}</a>\r\n                            {issue.labels.map( label =>(\r\n                                <span key={label.id}>{label.name}</span>\r\n                            ))}\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <PageActions>\r\n                <button type=\"button\" onClick={()=> handlePage('back')} disabled={page < 2}>Voltar</button>\r\n                <button type=\"button\" onClick={()=> handlePage('next')}>Próximo</button>\r\n            </PageActions>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch , Route} from 'react-router-dom';\r\n\r\nimport Main from './pages/Main';\r\nimport Repositorio from './pages/Repositorio';\r\n\r\nexport default function Routes(){\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Main}></Route>\r\n                <Route exact path=\"/repositorio/:repositorio\" component={Repositorio}></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box\r\n    }\r\n\r\n    html, body, #root{\r\n        min-height: 100%;\r\n    }\r\n    body{\r\n        background: #ececec;\r\n        font-size: 14px;\r\n    }\r\n    body, input, button{\r\n        color: #222;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n    }\r\n    button{\r\n        cursor:pointer;\r\n    }\r\n`;","import React from 'react';\nimport Routes from './routes';\nimport GlobalCss from './styles/global'\n\nfunction App() {\n  return (\n    <>\n      <GlobalCss/>\n      <Routes/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}